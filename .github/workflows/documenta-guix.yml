name: Guix + Documentá (build Guix API PDF)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      LANG: C.UTF-8
      LC_ALL: C.UTF-8

    steps:
      - uses: actions/checkout@v4

      - name: Install host deps (for PDF)
        run: |
          sudo apt-get update
          sudo apt-get install -y curl xz-utils bzip2 git \
            texinfo \
            texlive-latex-base texlive-latex-recommended \
            texlive-fonts-recommended texlive-latex-extra

      - name: Install Guix (binary) and start daemon
        run: |
          set -eux
          curl -L -o guix-binary.tar.xz https://ftp.gnu.org/gnu/guix/guix-binary-1.4.0.x86_64-linux.tar.xz
          sudo tar --extract --file=guix-binary.tar.xz --directory=/ --no-same-owner --warning=no-unknown-keyword
          # Build users
          sudo groupadd --system guixbuild || true
          for i in $(seq -w 1 10); do
            sudo useradd -g guixbuild -G guixbuild -d /var/empty -s "$(command -v nologin || echo /usr/sbin/nologin)" -c "Guix build user $i" guixbuilder$i || true
          done
          # Start daemon (non-chroot is fine for Actions)
          sudo -E /var/guix/profiles/per-user/root/current-guix/bin/guix-daemon --build-users-group=guixbuild --disable-chroot &
          sleep 5
          /var/guix/profiles/per-user/root/current-guix/bin/guix --version

      - name: Configure Guix channels (add Documentá channel if needed)
        run: |
          mkdir -p "$HOME/.config/guix"
          # If Documentá is in a personal channel, add it here.
          # Replace the URL below with the correct one for Documentá's channel.
          cat > "$HOME/.config/guix/channels.scm" <<'EOF'
          (list
            (channel
              (name 'guix)
              (url "https://git.savannah.gnu.org/git/guix.git"))
            ;; If Documentá isn't in the official Guix channel, uncomment and set:
            ;; (channel
            ;;   (name 'documenta)
            ;;   (url "https://codeberg.org/USER/CHANNEL.git"))
          )
          EOF
          cat "$HOME/.config/guix/channels.scm"

      - name: guix pull and install guile-documenta
        run: |
          set -eux
          guix pull
          . "$HOME/.config/guix/current/etc/profile"
          guix install guile-documenta
          . "$HOME/.guix-profile/etc/profile"
          which documenta
          documenta --version || true

      - name: Clone Guix sources
        run: |
          git clone --depth=1 https://git.savannah.gnu.org/git/guix.git

      - name: Generate Texinfo with Documentá
        working-directory: guix
        run: |
          mkdir -p doc
          # Document only the 'guix' module tree to keep PDF size sane.
          # You can add 'gnu' too (huge) by passing: "guix gnu"
          documenta api guix --destination doc/api
          # Minimal wrapper to include the generated API into one PDF
          cat > doc/main.texi <<'EOF'
          \input texinfo
          @setfilename guix-api
          @settitle Guix API (generated by Guile Documentá)
          @documentlanguage en
          @documentencoding UTF-8
          @node Top
          @top Guix API
          API extracted from the Guix source tree using Guile Documentá.

          @menu
          * API::
          @end menu

          @node API
          @chapter API
          @include api/index.texi

          @bye
          EOF

      - name: Build PDF from Texinfo
        working-directory: guix/doc
        run: |
          makeinfo --no-split --pdf -o guix-api-documenta.pdf main.texi
          ls -lh guix-api-documenta.pdf

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: guix-api-documenta
          path: guix/doc/guix-api-documenta.pdf
