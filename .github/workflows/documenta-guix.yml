name: Guix + Guile Documentá → Guix API PDF

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      LANG: C.UTF-8
      LC_ALL: C.UTF-8
      # Document just the Guix module tree by default; change to: "guix gnu" for everything (big).
      MODULE_SOURCES: "guix"

    steps:
      - uses: actions/checkout@v4

      - name: Install host deps (Texinfo/PDF)
        run: |
          sudo apt-get update
          sudo apt-get install -y curl xz-utils bzip2 git gnupg ca-certificates \
            texinfo \
            texlive-latex-base texlive-latex-recommended \
            texlive-fonts-recommended texlive-latex-extra

      - name: Download Guix binary tarball
        run: |
          curl -L -o guix-binary.tar.xz https://ftp.gnu.org/gnu/guix/guix-binary-1.4.0.x86_64-linux.tar.xz

      - name: Install Guix and start daemon
        run: |
          set -eux
          sudo tar --extract --file=guix-binary.tar.xz --directory=/ --no-same-owner --warning=no-unknown-keyword

          # Create build users (idempotent)
          sudo groupadd --system guixbuild || true
          for i in $(seq -w 1 10); do
            sudo useradd -g guixbuild -G guixbuild -d /var/empty \
              -s "$(command -v nologin || echo /usr/sbin/nologin)" \
              -c "Guix build user $i" guixbuilder$i || true
          done

          # Start daemon (we do it explicitly instead of via systemd)
          sudo -E /var/guix/profiles/per-user/root/current-guix/bin/guix-daemon \
            --build-users-group=guixbuild \
            --disable-chroot \
            --substitute-urls='https://ci.guix.gnu.org https://bordeaux.guix.gnu.org' &
          sleep 5

          # Make the initial root profile 'guix' visible to later steps
          echo "/var/guix/profiles/per-user/root/current-guix/bin" >> "$GITHUB_PATH"
          guix --version

      - name: guix pull (user profile) and expose to PATH
        run: |
          set -eux
          guix pull
          # Add the per-user "current" profile to PATH for subsequent steps
          echo "$HOME/.config/guix/current/bin" >> "$GITHUB_PATH"
          guix describe

      - name: Install Guile Documentá
        run: |
          set -eux
          guix install guile-documenta
          # Add the user's default profile to PATH (where documenta lives)
          echo "$HOME/.guix-profile/bin" >> "$GITHUB_PATH"
          which documenta
          documenta --version || true

      - name: Clone Guix sources (to document)
        run: |
          git clone --depth=1 https://git.savannah.gnu.org/git/guix.git

      - name: Generate Texinfo API with Documentá
        working-directory: guix
        env:
          # Prepend the checkout dir so modules like (guix …) resolve from ./guix
          GUILE_LOAD_PATH: ${{ github.workspace }}/guix
        run: |
          mkdir -p doc
          # e.g. MODULE_SOURCES: "guix" or "guix gnu"
          documenta api $MODULE_SOURCES --destination doc/api
          # Wrap in a tiny manual that includes the generated API
          cat > doc/main.texi <<'EOF'
          \input texinfo
          @setfilename guix-api
          @settitle Guix API (generated by Guile Documentá)
          @documentlanguage en
          @documentencoding UTF-8

          @node Top
          @top Guix API

          @menu
          * API::
          @end menu

          @node API
          @chapter API
          @include api/index.texi

          @bye
          EOF

      - name: Build PDF
        working-directory: guix/doc
        run: |
          makeinfo --no-split --pdf -o guix-api-documenta.pdf main.texi
          ls -lh guix-api-documenta.pdf

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: guix-api-documenta
          path: guix/doc/guix-api-documenta.pdf
